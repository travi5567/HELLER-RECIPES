//MIXINS
@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
  -webkit-box-shadow:$top $left $blur $color #{$inset};
  -moz-box-shadow:$top $left $blur $color #{$inset};
  -ms-box-shadow:$top $left $blur $color #{$inset};
  -o-box-shadow:$top $left $blur $color #{$inset};
     box-shadow:$top $left $blur $color #{$inset};
}

// keyframes mixin scss
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}


@mixin placeholder($color) {
  @-webkit-input-placeholder {
    color: $color;
  }

  @-moz-placeholder { /* Firefox 18- */
    color: $color;  
  }

  @-moz-placeholder {  /* Firefox 19+ */
    color: $color;  
  }

  @-ms-input-placeholder {  
    color: $color;  
  }
}



 // use of keyframes mixin
 @include keyframes(bgcolor) {
   0% {
     background-color: #ffccf2;
   }
   50% {
     background-color: #ccffcc;
   }
   100% {
     background-color: #ccffff;
   } 
 }


@mixin noPadding {
  margin: 0;
  padding: 0;
  //@include noPadding
};

@mixin placeHolder($color, $padding) {
  ::-webkit-input-placeholder {
    color: $color;
    padding: 3px $padding;
  }
  :-moz-placeholder { /* Firefox 18- */
    color: $color;
    padding: 3px $padding;  
  }
  ::-moz-placeholder {  /* Firefox 19+ */
    color: $color;
    padding: 3px $padding;  
  }
  :-ms-input-placeholder {  
    color: $color;
    padding: 3px $padding;  
  }
}
@mixin linkColor($color) {
  color: $color;
  &:hover, &:active, &:focus {
      color: lighten($color, 20%);
  }
}

@mixin font-size($sizeValue){
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

@mixin linear-gradient($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -webkit-gradient(linear, left top, bottom right, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(top, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
  //SASS GRADIENT  @include linear-gradient(#000, #BADA55);
}

@mixin css3($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
       #{$prefix}#{$property}: $value;
  }
  //SCSS – Usage with @include
  //.border_radius {
  //  @include css3(transition, 0.5s);
  //}
  //CSS – Output
  //.border_radius {
  //  -webkit-transition: 0.5s;
  //  -moz-transition: 0.5s;
  //  -ms-transition: 0.5s;
  //  -o-transition: 0.5s;
  //  transition: 0.5s;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacityIE: $opacity * 100;
  filter: alpha(opacity=$opacityIE);
  //@include opacity(0.5);
}

@mixin absPosition ($top: auto, $right: auto, $bottom: auto, $left: auto) {
     position: absolute;
     top: $top;
     right: $right;
     bottom: $bottom;
     left: $left;
     //@include absPosition(5px, 20px, 10px, 15px);
}


@mixin imgRetina($image, $extension, $width, $height) {
     background: url($image + '.' + $extension) no-repeat;
     width: $width;
     height: $height;
     
     @media (min--moz-device-pixel-ratio: 1.3),
           (-o-min-device-pixel-ratio: 2.6/2),
           (-webkit-min-device-pixel-ratio: 1.3),
           (min-device-pixel-ratio: 1.3),
           (min-resolution: 1.3dppx) {     
                background-image: url($image + '-2x' + '.' + $extension) no-repeat;
                background-size: $width $height;
     }
  // SCSS – Usage with @include
  // .logo {
  //    @include imgRetina(logo, png, 100px, 40px);
  // }
  // CSS – Output
  // .logo {
  //   background: url(logo.png) no-repeat;
  //   width: 100px;
  //   height: 40px;
  // }
  // @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
  //   .logo {
  //     background-image: url(logo-2x.png) no-repeat;
  //     background-size: 100px 40px;
  //   }
  // }
}

@mixin placeholder($color){
  ::-webkit-input-placeholder {
     color: $color;
  }
  :-moz-placeholder { /* Firefox 18- */
     color: $color;  
  }
  ::-moz-placeholder {  /* Firefox 19+ */
     color: $color;  
  }
  :-ms-input-placeholder {  
     color: $color;  
  }
}
    
$light: #f3efe5;
$dark: #4e3718;

@mixin txtOffset( $offsetColor: $dark, $txtColor: $light, $shadeColor: darken($offsetColor, 20%)){
  color: $txtColor;
  text-shadow: 
    1px 1px $offsetColor,
    3px 3px $shadeColor;
    // <section class="light">
    //   <h1>Dark Title</h1>
    // </section>
    // <section class="dark">
    //   <h1>Light Title</h1>
    // </section>
}

@mixin blur-filter($blur) {
    -webkit-filter: blur($blur);
    -moz-filter: blur($blur);
    -o-filter: blur($blur);
    -ms-filter: blur($blur);
    filter: blur($blur);
}







$elements: project-covers, sorting-bar, modals, navigation;










